# Cloudflare Workers configuration for SwapWatch API

name = "swapwatch-api"
main = "src/worker/index.ts"
compatibility_date = "2024-09-23"
compatibility_flags = ["nodejs_compat"]

# Durable Objects binding (top level - default environment)
[[durable_objects.bindings]]
name = "ROOMS"
class_name = "RoomDurableObject"

# Durable Objects migrations (using new_sqlite_classes for free tier)
[[migrations]]
tag = "v1"
new_sqlite_classes = ["RoomDurableObject"]

# Environment configuration - Staging
[env.staging]
vars = { ENVIRONMENT = "staging" }

[[env.staging.durable_objects.bindings]]
name = "ROOMS"
class_name = "RoomDurableObject"

[[env.staging.kv_namespaces]]
binding = "ROOM_INDEX"
id = "41030dc60b6041d4926aa592336b4522"

# Staging route (using workers.dev subdomain for now)
# route = { pattern = "staging-api.swapwatch.app/*", zone_name = "swapwatch.app" }

# Environment configuration - Production
[env.production]
vars = { ENVIRONMENT = "production" }

[[env.production.durable_objects.bindings]]
name = "ROOMS"
class_name = "RoomDurableObject"

[[env.production.kv_namespaces]]
binding = "ROOM_INDEX"
id = "bb200532d7c04a3fa9110a9fb2d7d294"

# Production route
# route = { pattern = "api.swapwatch.app/*", zone_name = "swapwatch.app" }

# Build configuration
# No custom build needed - TypeScript is handled by wrangler automatically
# [build]
# command = "pnpm build:worker"

# Development settings
[dev]
port = 8787
local_protocol = "http"

# Secrets (set via wrangler secret)
# COINBASE_WEBHOOK_SECRET
# TELEGRAM_BOT_TOKEN
# DEXSCREENER_API_KEY
# BASESCAN_API_KEY