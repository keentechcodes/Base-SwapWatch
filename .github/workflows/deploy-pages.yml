name: Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
    paths:
      - 'app/**'
      - 'components/**'
      - 'lib/**'
      - 'public/**'
      - 'hooks/**'
      - 'package.json'
      - 'next.config.js'
      - 'next.config.mjs'
      - 'tailwind.config.*'
      - 'tsconfig.json'
      - '.github/workflows/deploy-pages.yml'
  workflow_dispatch:

jobs:
  deploy-pages:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Cloudflare Pages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Type check
        run: pnpm typecheck

      - name: Build application
        run: pnpm run build:pages
        env:
          NODE_ENV: production
          NEXT_PUBLIC_API_URL: https://api.swapwatch.app
          NEXT_PUBLIC_WS_URL: wss://api.swapwatch.app

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: base-swapwatch
          directory: .vercel/output/static
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: main
